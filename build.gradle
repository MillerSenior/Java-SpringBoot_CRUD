plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'org.darrotech'
version = '0.0.1-SNAPSHOT'

// Enforce Java 17
java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.xerial:sqlite-jdbc:3.43.2.2'
	implementation 'org.hibernate.orm:hibernate-community-dialects:6.4.4.Final'
	implementation 'me.paulschwarz:spring-dotenv:3.0.0'
	implementation 'org.springframework.security:spring-security-crypto'
	implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Add this to ensure Gradle uses Java 17
tasks.withType(JavaCompile).configureEach {
	options.compilerArgs += ['--release', '17']
}

// Configure Gradle itself to use Java 17
tasks.withType(Test).configureEach {
	jvmArgs += ['--add-opens', 'java.base/java.lang=ALL-UNNAMED']
	jvmArgs += ['--add-opens', 'java.base/java.util=ALL-UNNAMED']
}

// Ensure Gradle wrapper uses Java 17
wrapper {
	gradleVersion = '8.5'
	distributionType = Wrapper.DistributionType.BIN
}
